qnorm(p=5, mean=115.1, sd=20.5)
qnorm(p=0.05, mean=115.1, sd=20.5)
qnorm(p=0.05, mean=125.5, sd=20.5)
qnorm(p=0.05)
qnorm(p=0.05, lower.tail=TRUE)
qnorm(p=0.05, lower.tail=FALSE)
qnorm(p=0.025, lower.tail=FALSE)
qnorm(p=0.025, lower.tail=TRUE)
version
getOption("repos")
chooseCRANmirror()
getOption("repos")
unlink('C:/Users/Joseph/_Aston/DataMining/Assignment/CS4850_RomanCerny_cache', recursive = TRUE)
install.packages("xfun")
install.packages("yuml")
install.packages("yaml")
getOption("repos")
chooseCRANmirror()
chooseCRANmirror()
getOption("repos")
install.packages("knitr")
install.packages("xfun")
install.packages("xfun")
update.packages("xfun")
install.packages("xfun")
getOption("repos")
getOption("repos")
help("Rprofile")
getOption("repos")
options(repos=structure(c(CRAN="https://mran.revolutionanalytics.com/snapshot/2017-01-01/")))
getOption("repos")
getOption("repos")
getOption("repos")
getOption("repos")
getOption("repos")
getOption("repos")
getOption("repos")
install.packages("xfun")
install.packages("C:/Users/Joseph/Downloads/xfun_0.21.zip", repos = NULL, type = "win.binary")
install.packages("xelatex")
install.packages("tinytex")
tinytex::install_prebuilt()
install.packages("tinytex")
install.packages("tinytex")
tinytex::install_prebuilt()
tinytex::uninstall_tinytex
tinytex::uninstall_tinytex()
tinytex::install_tinytex()
sin(5)
-sin(5)
cos(7)
cos(7)*7
(6*7*0.9589243) - (cos(7)*7)
6*7*0.9589243-cos(7)*7
6*0.9589243*(7-1)-108*cos(7)
-10*(6*7*0.9589243 - 108*cos(7))
108*(-cos(-2))
-cos(7)
-cos(-2)
0.4161468*108
42*0.9589243+(-0.7539023)*108
(42*0.9589243)+((-0.7539023)*108)
(-10)*(-41.14663)
(-6)*0.9589243 +4*(-41.14663)
1-0.01*(-170.3401)* 1
-1-0.01*411.4663*(-1)
1-0.01*44.94385* 1
5*5*11+1
(320 * 240 * 3) * (320 * 240 * 11) + 1
20*(-0.2)+17*0.3+17*0.2+18*0.3
17*(-0.2)+15*0.3+18*0.2+12*0.3
15*(-0.2)+11*0.3+12*0.2+19*0.3
11*(-0.2)+18*0.3+19*0.2+20*0.3
17*(-0.2)+18*0.3+17*0.2+17*0.3
18*(-0.2)+12*0.3+17*0.2+17*0.3
12*(-0.2)+19*0.3+17*0.2+19*0.3
19*(-0.2)+20*0.3+19*0.2+18*0.3
17*(-0.2)+17*0.3+14*0.2+12*0.3
17*(-0.2)+17*0.3+12*0.2+16*0.3
17*(-0.2)+19*0.3+16*0.2+20*0.3
19*(-0.2)+18*0.3+20*0.2+14*0.3
14*(-0.2)+12*0.3+13*0.2+10*0.3
12*(-0.2)+16*0.3+10*0.2+17*0.3
16*(-0.2)+20*0.3+17*0.2+15*0.3
20*(-0.2)+14*0.3+15*0.2+15*0.3
-0.2*10.5+0*12.4+(-0.2)*9.5+(-0.1)*11.5
0*10.5+0*12.4+(-0.2)*9.5+(-0.2)*11.5
0.1*10.5+0*12.4+(-0.1)*9.5+(-0.2)*11.5
(1 - 0.001)((-0.2)*0.4 +(-0.9))+ 0.001* ( 50 + 0.9* ((-0.2)*0.9 +(-0.9)))
(1 - 0.001)*((-0.2)*0.4 +(-0.9))+ 0.001* ( 50 + 0.9* ((-0.2)*0.9 +(-0.9)))
setwd("C:/Users/Joseph/_Aston/Dissertation/Multi-objective-Epitope-Prediction-for-Diagnostic-Test-Development")
library(BiocManager)
library(Biostrings)
#s1 <- AAString("FSNRDVYDSGSGVNNYDGDY")
#s2 <- AAString("SFSNRDVYDSGSGVNNYDGDY")
#s1 <- AAString("GMTPLTEEEYQYSLQW")
#s2 <- AAString("MTPLTEEEYQYSLQW")
#s1 <- AAString("PTTGETAE")
#s2 <- AAString("KPTTEGGVETE")
#s1 <- AAString("MINS")
#s2 <- AAString("MAKLILVS")
#s1 <- AAString("DLTDIKRN")
#s2 <- AAString("DLNTLDINE")
s1 <- AAString("ERSVSQCKTSDSRNRSSSRRNSPEYDISQITEQESEKS")
s2 <- AAString("PKYVKQNTLKLATGMRNVPEKQT") #EYEEDRGKGFFPQTITQEYE")
#s1 <- AAString("SKSRSESLVVSRQ")
#s2 <- AAString("GKGRGLSLSR")
#s1 <- AAString("RSEKSSVREF")
#s2 <- AAString("RTSITNTGLT")
## Align two amino acid sequences with the BLOSUM62 matrix
#pairwiseAlignment(s1, s2, substitutionMatrix = "BLOSUM62", gapOpening = 3, gapExtension = 1)
## See how the gap penalty influences the alignment
#pairwiseAlignment(s1, s2, substitutionMatrix = "BLOSUM62", gapOpening = 6, gapExtension = 2)
## See how the substitution matrix influences the alignment
#pairwiseAlignment(s1, s2, substitutionMatrix = "BLOSUM50", gapOpening = 3, gapExtension = 1)
#pairwiseAlignment(s1, s2, substitutionMatrix = "BLOSUM45", gapOpening = 3, gapExtension = 1)
#pairwiseAlignment(s1, s2, substitutionMatrix = "BLOSUM80", gapOpening = 3, gapExtension = 1)
#pairwiseAlignment(s1, s2, substitutionMatrix = "BLOSUM100", gapOpening = 3, gapExtension = 1)
#pairwiseAlignment(s1, s2, substitutionMatrix = "PAM30", gapOpening = 3, gapExtension = 1)
#pairwiseAlignment(s1, s2, substitutionMatrix = "PAM40", gapOpening = 3, gapExtension = 1)
#pairwiseAlignment(s1, s2, substitutionMatrix = "PAM70", gapOpening = 3, gapExtension = 1)
#pairwiseAlignment(s1, s2, substitutionMatrix = "PAM120", gapOpening = 3, gapExtension = 1)
#pairwiseAlignment(s1, s2, substitutionMatrix = "PAM250", gapOpening = 3, gapExtension = 1)
pairwiseAlignment(s1, s2, type = "overlap", substitutionMatrix = "BLOSUM45", gapOpening = 3, gapExtension = 1)
pairwiseAlignment(s1, s2, type = "overlap", substitutionMatrix = "PAM30", gapOpening = 3, gapExtension = 1)
#if (interactive()) {
#  ## Compare our BLOSUM62 with BLOSUM62 from ftp://ftp.ncbi.nih.gov/blast/matrices/
#  data(BLOSUM62)
#  BLOSUM62["Q", "Z"]
#  file <- "ftp://ftp.ncbi.nih.gov/blast/matrices/BLOSUM62"
#  b62 <- as.matrix(read.table(file, check.names=FALSE))
#  b62["Q", "Z"]
#}
#data(PAM30)
#data(PAM250)
#data(BLOSUM45)
